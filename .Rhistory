install.packages("swirl")
library("swirl")
swirl()
5 + 7
x <- 5+7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z,555,z)
z * 2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z * 2 + 1000
my_div
library(swirl)
swirl()
1:20
pi:10
15:1
?':'
seq(1,20)
seq(0,10,by=.05)
seq(0,10,by=0.5)
seq(5,10,length=30)
my_seq = seq(5,10,length=30)
my_seq <- seq(5, 10, length=30)
length()
length(my_seq)
1:length(my_seq)
seq(along.with =my_seq)
?along
?along.with
?'along'
?'along.with'
??along.with
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times = 10)
rep(c(0,1,2), each = 10)
x<- list(foo = 1:4, bar = 0.6, baz = "hello")
$foo
x(foo)
x[foo]
x[$foo]
x[c(1,3)]
x[c(2)]
x<- list(foo = 1:4, bar = 0.6, baz = "hello")
name <- "foo"
x[[name]]
x[[foo]]
x[["foo"]]
library("swirl")
swirl()
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
Z<- rep(NA,1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y
y>0
y[y>0]
x
x>0
x[x>0]
x[!is.na(x) & x> 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <-c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect <-c(11,2,NA)
vect2 <-c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect1,vect2)
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
a <- availablepackages()
a <- available.packages()
a
install.packages("KernSmooth")
libary(KernSmooth)
library(KernSmooth)
?file.path
file.getwd()
getwd()
?read.csv
data.files <- numeric()
swirl()
library("swirl")
swirl()
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
matrix(1:20,4,5)
my_matrix2 <- matrix(1:20,4,5)
identical(my_matrix,my_matrix2)
patients <- c("Bill","Gina", "Kelly","Sean")
cbind(patients,my_matrix)
my_data <-data.frame(patients,my_matrix)
my_data
class(my_data)
cnames <- ("patient", "age", "weight", "bp", "rating", "test")
cnames <- ("patient","age","weight","bp","rating","test")
cnames <- ("patient","age","weight","bp","rating","test")
cnames <- c("patient","age","weight","bp","rating","test")
?colnamesw
?colnames
colnames(my_data) <- cnames
my_Data
my_data
TRUE == TRUE
((FALSE == TRUE) == FALSE)
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
5 != 7
5 !==7
?not
not (5 == 7)
not(5 == 7)
info()
5 == 7
!5 == 7
FALSE & FALSE
TRUE & c(TRUE,FALSE,FALSE)
TRUE && c(TRUE,FALSE,FALSE)
TRUE | c(TRUE,FALSE,FALSE)
TRUE || c(TRUE,FALSE,FALSE)
5 > 8 || 6!= 8 && 4 > 3.9
isTrue(6 > 4)
isTRUE(6 > 4)
identical('twins','twins')
xor(5 == 6, !FALSE)
ints <- sample(1)
ints <- sample(10)
ints
ints > 5
which(ints>7)
any(ints<0)
all(ints>0)
runif(10)
?runif
?gl
gl(3,10)
ls
wd()()
setwd("~/GitHub/ProgrammingAssignment2")
ls()
getwd()
list.files()
source("cachematrix.R")
get <- function() x
get
?solve
solve(2+2)
?solve
x = 2 + 2
solve(x)
mat <- matrix(c(1:9))
mat
mat <- matrix(c(1:9),c(1:3))
mat
mat <- matrix(c(1:3),c(1:3))
mat <- matrix(c(1:3),c(1:3))
mat
mat <- matrix(c(1:9), nrow = 3, ncol = 3)
mat
solve(mat)
mat2 < - matrix(c(1:4), nrow = 2, ncol = 2)
mat2 < - matrix(c(1:4), nrow = 2, ncol = 2)
matrix2 < - matrix(c(1:4), nrow = 2, ncol = 2)
matrix
abc <- c(1:4)
matrix(abc, 2, 2)
mat2 <-(abc,2,2)
mat2 <-matrix(abc,2,2)
mat2
solve(mat2)
source(cachematrix.R)
source("cachematrix.R")
makeCacheMatrix(mat2)
makeCacheMatrix()
source("cachematrix.R")
cacheSolve
makeCacheMatrix
makeCacheMatrix()
cacheSolve()
source("cachematrix.R")
cachesolve2()
cacheSolve2()
cacheSolve2(2)
cacheSolve2(mat2)
cacheSolve(makeCacheMatrix(2*diag(3)))
cacheSolve(makeCacheMatrix(mat2))
cacheSolve(makeCacheMatrix(mat))
cacheSolve(makeCacheMatrix(mat2))
source("cachematrix.R")
cacheSolve(makeCacheMatrix(mat2))
